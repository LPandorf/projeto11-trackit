{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Let\\xEDcia Pandorf\\\\projeto11-trackit\\\\src\\\\components\\\\Barracircular.js\";\nimport * as React from \"react\";\nimport { View, Dimensions } from \"react-native\";\nimport { DangerZone, Svg } from \"expo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Circle\n} = Svg;\nconst {\n  width\n} = Dimensions.get(\"window\");\nconst size = width - 32;\nconst strokeWidth = 50;\nconst radius = (size - strokenWidth) / 2;\nconst circumference = radius * 2 * Math.PI;\nexport default (() => {\n  const foo = 1;\n  return /*#__PURE__*/_jsxDEV(Svg, {\n    width: size,\n    height: size,\n    children: /*#__PURE__*/_jsxDEV(Circle, {\n      stroke: \"#2162cc\",\n      fill: \"None\",\n      cx: size / 2,\n      cy: size / 2,\n      r: radius,\n      strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n});\n\n/*import {\r\n    CircularProgressbar,\r\n    buildStyles\r\n  } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\n\r\n\r\n<ChangingProgressProvider values={[0, 20, 40, 60, 80, 100]}>\r\n    {percentage => (\r\n        <CircularProgressbar value={percentage} text={`${percentage}%`} />\r\n    )}<CircularProgressbar\r\n        value={percentage}\r\n        text={`${percentage}%`}\r\n        background\r\n        backgroundPadding={6}\r\n        styles={buildStyles({\r\n            backgroundColor: \"#3e98c7\",\r\n            textColor: \"#fff\",\r\n            pathColor: \"#fff\",\r\n            trailColor: \"transparent\"\r\n        })}\r\n/>\r\n\r\n\r\n<Example label=\"Custom animation speed\">\r\n      <ChangingProgressProvider values={[0, 20, 40, 60, 80, 100]}>\r\n        {percentage => (\r\n          <CircularProgressbar\r\n            value={percentage}\r\n            text={`${percentage}%`}\r\n            styles={buildStyles({\r\n              pathTransitionDuration: 0.15\r\n            })}\r\n          />\r\n        )}\r\n      </ChangingProgressProvider>\r\n    </Example>\r\n\r\n    */","map":{"version":3,"names":["React","View","Dimensions","DangerZone","Svg","Circle","width","get","size","strokeWidth","radius","strokenWidth","circumference","Math","PI","foo"],"sources":["C:/Users/LetÃ­cia Pandorf/projeto11-trackit/src/components/Barracircular.js"],"sourcesContent":["import * as React from \"react\";\r\nimport {View, Dimensions} from \"react-native\";\r\nimport {DangerZone, Svg} from \"expo\";\r\n\r\nconst {Circle}=Svg;\r\nconst {width} =Dimensions.get(\"window\");\r\nconst size= width-32;\r\nconst strokeWidth= 50;\r\nconst radius = (size-strokenWidth)/2;\r\nconst circumference=radius*2*Math.PI;\r\n\r\n\r\ninterface CircularProgressProps {}\r\n\r\nexport default () => {\r\n    const foo = 1;\r\n    return (\r\n        <Svg width={size} height={size}>\r\n            <Circle\r\n                stroke=\"#2162cc\"\r\n                fill=\"None\"\r\n                cx={size / 2}\r\n                cy={size / 2}\r\n                r={radius}\r\n                {...{ strokeWidth }}\r\n            />\r\n        </Svg>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*import {\r\n    CircularProgressbar,\r\n    buildStyles\r\n  } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\n\r\n\r\n<ChangingProgressProvider values={[0, 20, 40, 60, 80, 100]}>\r\n    {percentage => (\r\n        <CircularProgressbar value={percentage} text={`${percentage}%`} />\r\n    )}<CircularProgressbar\r\n        value={percentage}\r\n        text={`${percentage}%`}\r\n        background\r\n        backgroundPadding={6}\r\n        styles={buildStyles({\r\n            backgroundColor: \"#3e98c7\",\r\n            textColor: \"#fff\",\r\n            pathColor: \"#fff\",\r\n            trailColor: \"transparent\"\r\n        })}\r\n/>\r\n\r\n\r\n<Example label=\"Custom animation speed\">\r\n      <ChangingProgressProvider values={[0, 20, 40, 60, 80, 100]}>\r\n        {percentage => (\r\n          <CircularProgressbar\r\n            value={percentage}\r\n            text={`${percentage}%`}\r\n            styles={buildStyles({\r\n              pathTransitionDuration: 0.15\r\n            })}\r\n          />\r\n        )}\r\n      </ChangingProgressProvider>\r\n    </Example>\r\n\r\n    */"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAAQC,IAAI,EAAEC,UAAU,QAAO,cAAc;AAC7C,SAAQC,UAAU,EAAEC,GAAG,QAAO,MAAM;AAAC;AAErC,MAAM;EAACC;AAAM,CAAC,GAACD,GAAG;AAClB,MAAM;EAACE;AAAK,CAAC,GAAEJ,UAAU,CAACK,GAAG,CAAC,QAAQ,CAAC;AACvC,MAAMC,IAAI,GAAEF,KAAK,GAAC,EAAE;AACpB,MAAMG,WAAW,GAAE,EAAE;AACrB,MAAMC,MAAM,GAAG,CAACF,IAAI,GAACG,YAAY,IAAE,CAAC;AACpC,MAAMC,aAAa,GAACF,MAAM,GAAC,CAAC,GAACG,IAAI,CAACC,EAAE;AAKpC,gBAAe,MAAM;EACjB,MAAMC,GAAG,GAAG,CAAC;EACb,oBACI,QAAC,GAAG;IAAC,KAAK,EAAEP,IAAK;IAAC,MAAM,EAAEA,IAAK;IAAA,uBAC3B,QAAC,MAAM;MACH,MAAM,EAAC,SAAS;MAChB,IAAI,EAAC,MAAM;MACX,EAAE,EAAEA,IAAI,GAAG,CAAE;MACb,EAAE,EAAEA,IAAI,GAAG,CAAE;MACb,CAAC,EAAEE,MAAO;MACJD;IAAW;MAAA;MAAA;MAAA;IAAA;EACnB;IAAA;IAAA;IAAA;EAAA,QACA;AAEd,CAAC;;AAuBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}